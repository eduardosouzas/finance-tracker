plugins {
    id 'java-conventions'
    id 'jacoco-report-aggregation'
    id 'application'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.flywaydb.flyway' version '9.11.0'
}

group 'com.expertiseIt.financial.infrastructure'

bootJar {
    archiveName 'application.jar'
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

dependencies {
    implementation(project(':domain'))
    implementation(project(':application'))
    implementation('mysql:mysql-connector-java:8.0.33')
    implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0')

    implementation('org.springframework.boot:spring-boot-starter-web:3.2.2') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation('org.springframework.boot:spring-boot-starter-undertow:3.2.2')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa:3.2.2')

    implementation('com.fasterxml.jackson.module:jackson-module-afterburner:2.15.0')
    // implementation('org.springframework.boot:spring-boot-starter-security')
    // implementation('org.springframework.boot:spring-boot-starter-oauth2-resource-server')
    testImplementation('org.springframework.boot:spring-boot-starter-test:3.2.2')
    testImplementation('org.testcontainers:testcontainers:1.19.3')
    testImplementation('org.springframework.security:spring-security-test')
    testImplementation('org.testcontainers:mysql:1.19.3')
    testImplementation('org.testcontainers:junit-jupiter:1.19.3')
    testImplementation('org.flywaydb:flyway-core')
    testImplementation('org.flywaydb:flyway-mysql')
    testRuntimeOnly('com.h2database:h2')
}

flyway {
    url = System.getenv( 'FLYWAY_DB') ?: 'jdbc:mysql://localhost:3306/financial'
    user = System.getenv('FLYWAY_USER') ?: 'root'
    password = System.getenv('FLYWAY_PASS') ?: 'qwerty@1234'
}

testCodeCoverageReport {
    reports {
        xml {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/jacocoTestReport.xml")
        }
        html  {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/")
        }
    }
}

tasks.named("jacocoTestReport") {
    dependsOn tasks.named("testCodeCoverageReport", JacocoReport)
}